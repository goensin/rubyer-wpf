<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:rubyer="clr-namespace:Rubyer">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/BaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Icon.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="RubyerMessageCard" TargetType="{x:Type rubyer:MessageCard}">
        <Setter Property="Background" Value="{DynamicResource DefaultBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderGray}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="2.5" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="IsShow" Value="True" />
        <Setter Property="IsShwoIcon" Value="False" />
        <Setter Property="Margin" Value="2.5" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rubyer:MessageCard}">
                    <Border x:Name="rootBorder"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding ThemeColorBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="3"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding ThemeColorBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Effect="{StaticResource AllDirectionEffect}" />

                            <rubyer:Icon Grid.Column="0"
                                         Width="23"
                                         Height="23"
                                         Margin="8 0 0 0"
                                         Foreground="{TemplateBinding ThemeColorBrush}"
                                         Type="{TemplateBinding IconType}"
                                         Visibility="{TemplateBinding IsShwoIcon, Converter={StaticResource boolToVisibility}}" />
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Margin="8 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Button x:Name="PART_CloseButton"
                                    Style="{StaticResource TextMidButton}"
                                    Grid.Column="2"
                                    Foreground="{TemplateBinding Foreground}"
                                    Visibility="{TemplateBinding IsClearable, Converter={StaticResource boolToVisibility}}">
                                <rubyer:Icon Type="CloseLine" />
                            </Button>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ShowState">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Close">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseIn" />
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Open">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             From="0.01"
                                                             To="1"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                             From="-30"
                                                             To="0"
                                                             Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Close">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                         To="-30"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="rootBorder"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                         To="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="rootBorder" Property="Opacity" Value="0">
                            <Setter Property="IsClosed" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ThemeColorBrush" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="WarningMessage"
           BasedOn="{StaticResource RubyerMessageCard}"
           TargetType="{x:Type rubyer:MessageCard}">
        <Setter Property="IconType" Value="ErrorWarningFill" />
        <Setter Property="IsShwoIcon" Value="True" />
        <Setter Property="ThemeColorBrush" Value="{StaticResource WarningBrush}" />
    </Style>

    <Style x:Key="SuccessMessage"
           BasedOn="{StaticResource RubyerMessageCard}"
           TargetType="{x:Type rubyer:MessageCard}">
        <Setter Property="IconType" Value="CheckboxCircleFill" />
        <Setter Property="IsShwoIcon" Value="True" />
        <Setter Property="ThemeColorBrush" Value="{StaticResource SuccessBrush}" />
    </Style>

    <Style x:Key="ErrorMessage"
           BasedOn="{StaticResource RubyerMessageCard}"
           TargetType="{x:Type rubyer:MessageCard}">
        <Setter Property="IconType" Value="CloseCircleFill" />
        <Setter Property="IsShwoIcon" Value="True" />
        <Setter Property="ThemeColorBrush" Value="{StaticResource ErrorBrush}" />
    </Style>

    <Style x:Key="InfoMessage"
           BasedOn="{StaticResource RubyerMessageCard}"
           TargetType="{x:Type rubyer:MessageCard}">
        <Setter Property="IconType" Value="InformationFill" />
        <Setter Property="IsShwoIcon" Value="True" />
        <Setter Property="ThemeColorBrush" Value="{StaticResource InfoBrush}" />
    </Style>

</ResourceDictionary>