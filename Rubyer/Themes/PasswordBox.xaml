<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:rubyer="clr-namespace:Rubyer">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/BaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  错误验证  -->
    <!--<ControlTemplate x:Key="ValidationErrorTemplate">
        <StackPanel>
            <AdornedElementPlaceholder Name="Placeholder" />
            <Border x:Name="DefaultErrorViewer" Visibility="Visible" Background="Transparent">
                <TextBlock Foreground="{StaticResource ErrorBrush}" FontSize="10"
                           MaxWidth="{Binding ElementName=Placeholder, Path=ActualWidth}"
                           HorizontalAlignment="Left" Margin="3 1 0 1" TextWrapping="Wrap"
                           Text="{Binding CurrentItem.ErrorContent}" UseLayoutRounding="false" />
            </Border>
        </StackPanel>
    </ControlTemplate>-->

    <Style x:Key="RubyerPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderGray}" />
        <Setter Property="BorderThickness" Value="1.3" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="Height" Value="28" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="rubyer:PasswordHelper.ShowSwitchButton" Value="False" />
        <Setter Property="rubyer:ControlHelper.CornerRadius" Value="{StaticResource AllControlCornerRadius}" />
        <Setter Property="rubyer:ControlHelper.FocusedBrush" Value="{DynamicResource Primary}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(rubyer:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--  前置内容  -->
                                <ContentControl x:Name="preContent"
                                                Grid.Column="0"
                                                Margin="3 0"
                                                VerticalAlignment="Center"
                                                Content="{Binding Path=(rubyer:TextBoxHelper.PreContent), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Foreground="{DynamicResource BorderGray}" />

                                <Grid Grid.Column="1" VerticalAlignment="Center">
                                    <!--  显示文本  -->
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="false"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden" />

                                    <!--  记录密码文本  -->
                                    <TextBlock x:Name="showPassword"
                                               Text="{Binding Path=(rubyer:PasswordHelper.Password), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                               Visibility="Hidden" />

                                    <!--  提示占位符  -->
                                    <TextBlock x:Name="watermark"
                                               Foreground="{DynamicResource BorderGray}"
                                               Text="{Binding Path=(rubyer:TextBoxHelper.Watermark), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Grid>

                                <!--  清除按钮  -->
                                <Button x:Name="clearButton"
                                        Style="{DynamicResource TextMidButton}"
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource BorderGray}"
                                        Visibility="Collapsed">
                                    <rubyer:Icon Type="CloseLine" />
                                </Button>

                                <!--  切换密码可见性  -->
                                <Button x:Name="switchVisibilityButton"
                                        Style="{StaticResource TextButton}"
                                        Grid.Column="3"
                                        Margin="3 0"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource BorderGray}"
                                        Visibility="Collapsed">
                                    <rubyer:Icon x:Name="switchVisibilityIcon" Type="EyeFill" />
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="{DynamicResource UnEnabledOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource DefaultForeground}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(rubyer:ControlHelper.FocusedBrush), RelativeSource={RelativeSource AncestorType={x:Type PasswordBox}}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="true" />
                                <Condition Property="rubyer:TextBoxHelper.IsClearable" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="clearButton" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="rubyer:TextBoxHelper.IsClearable" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="clearButton" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding Path=(rubyer:PasswordHelper.ShowSwitchButton), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="switchVisibilityButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(rubyer:PasswordHelper.Password), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullOrEmptyConverter}}" Value="False">
                            <Setter TargetName="watermark" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(rubyer:PasswordHelper.IsShowPassword), RelativeSource={RelativeSource Mode=Self}}" Value="true">
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="showPassword" Property="Visibility" Value="Visible" />
                            <Setter TargetName="switchVisibilityIcon" Property="Type" Value="EyeOffFill" />
                        </DataTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ErrorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>