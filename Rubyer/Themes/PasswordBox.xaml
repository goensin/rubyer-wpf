<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:rubyer="clr-namespace:Rubyer">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/BaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="RubyerPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="28" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}" />
        <Setter Property="rubyer:ControlHelper.CornerRadius" Value="{StaticResource AllControlCornerRadius}" />
        <Setter Property="rubyer:ControlHelper.FocusBorderBrush" Value="{DynamicResource Primary}" />
        <Setter Property="rubyer:PasswordBoxHelper.ShowSwitchButton" Value="False" />
        <Setter Property="rubyer:PasswordBoxHelper.IsBindable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="effectBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{Binding Path=(rubyer:ControlHelper.FocusBorderBrush), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(rubyer:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Opacity="0">
                            <Border.Effect>
                                <DropShadowEffect x:Name="shadowEffect"
                                                  BlurRadius="2"
                                                  Direction="0"
                                                  ShadowDepth="0"
                                                  Color="{Binding BorderBrush.Color, ElementName=effectBorder}" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(rubyer:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentControl x:Name="preContent"
                                                Grid.Column="0"
                                                Margin="3 0"
                                                VerticalAlignment="Center"
                                                Content="{Binding Path=(rubyer:TextBoxHelper.PreContent), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Foreground="{DynamicResource SeconarydText}" />

                                <Grid Grid.Column="1" VerticalAlignment="Center">
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  Focusable="false"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden" />

                                    <TextBlock x:Name="showPassword"
                                               Text="{Binding Path=(rubyer:PasswordBoxHelper.BindablePassword), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                               Visibility="Hidden" />

                                    <TextBlock x:Name="watermark"
                                               Margin="3 0"
                                               Foreground="{DynamicResource WatermarkText}"
                                               Text="{Binding Path=(rubyer:TextBoxHelper.Watermark), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Grid>

                                <Button x:Name="clearButton"
                                        Style="{StaticResource TextButton}"
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        rubyer:ButtonHelper.CircleDiameter="{StaticResource InsideButtonCircleDiameter}"
                                        rubyer:ButtonHelper.Shape="Circle"
                                        Foreground="{DynamicResource SeconarydText}"
                                        Visibility="Collapsed">
                                    <rubyer:Icon Type="CloseLine" />
                                </Button>

                                <Button x:Name="switchVisibilityButton"
                                        Style="{StaticResource TextButton}"
                                        Grid.Column="3"
                                        Margin="3 0"
                                        Padding="0"
                                        rubyer:ButtonHelper.CircleDiameter="{StaticResource InsideButtonCircleDiameter}"
                                        rubyer:ButtonHelper.Shape="Circle"
                                        Foreground="{DynamicResource SeconarydText}"
                                        Visibility="Collapsed">
                                    <rubyer:Icon x:Name="switchVisibilityIcon" Type="EyeFill" />
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="{StaticResource UnenableOpcity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="effectBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="effectBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Primary}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=(rubyer:TextBoxHelper.IsClearable), RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=Pas, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullOrEmpty}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="clearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=(rubyer:TextBoxHelper.IsClearable), RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                <Condition Binding="{Binding Path=Password, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullOrEmpty}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="clearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(rubyer:PasswordBoxHelper.ShowSwitchButton), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="switchVisibilityButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(rubyer:PasswordBoxHelper.BindablePassword), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullOrEmpty}}" Value="False">
                            <Setter TargetName="watermark" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(rubyer:PasswordBoxHelper.ShowPassword), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="switchVisibilityIcon" Property="Type" Value="EyeOffFill" />
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="showPassword" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ErrorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>